name: Deploy Azure Function App

on:
  push:
    branches:
      - master

env:
  AZURE_FUNCTIONAPP_NAME: 'Football.Bot.AzureFunction'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/Football.Bot.AzureFunction'
  DOTNET_VERSION: '6.0.x'

jobs:
  build:
    name: Build artifacts
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Run tests
      run: dotnet test --logger trx --results-directory "TestResults-'${{ env.DOTNET_VERSION }}'"
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-results-'${{ env.DOTNET_VERSION }}'
        path: TestResults-'${{ env.DOTNET_VERSION }}'
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

    - name: Store artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output/*'
        if-no-files-found: error

  DeployDev:
    name: Deploy to dev
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://t.me/football_serverless_bot
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - name: Setup dotnet ‚ú®
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Applying infrastructure üöÄ
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: dev
          pulumi-version: 3.67.1
          work-dir: ./infrastructure
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID : ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Download artifacts üõéÔ∏è
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

      - name: Deploy to ${{ env.name }} üöÄ
        uses: Azure/functions-action@v1
        with:
          app-name: football.bot-${{ env.name }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          package: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

  DeployStage:
    name: Deploy to staging
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

      - name: Deploy to ${{ env.name }}
        uses: Azure/functions-action@v1
        with:
          app-name: football.bot-${{ env.name }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          package: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
