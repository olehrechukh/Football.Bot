name: Deploy Azure Function App

on:
  push:
    branches:
      - master

env:
  AZURE_FUNCTIONAPP_NAME: 'Football.Bot.AzureFunction' 
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/Football.Bot.AzureFunction'
  DOTNET_VERSION: '6.0.x'
  
jobs:
  build:
    name: Build artifacts
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

    - name: Store artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output/*'
        if-no-files-found: error  
  
  DeployDev:
    name: Deploy to dev
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
#      - name: 'Az CLI login'
#        uses: azure/login@v1
#        with:
#          client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#      - uses: pulumi/actions@v3
#        with:
#          command: up
#          stack-name: org-name/${{ env.name }}
#        env:
#          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          
      - name: Deploy to ${{ env.name }}
        uses: Azure/functions-action@v1
        with:
          app-name: football.bot-${{ env.name }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          package: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          
  DeployStage:
    name: Deploy to staging
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

      - name: Deploy to ${{ env.name }}
        uses: Azure/functions-action@v1
        with:
          app-name: football.bot-${{ env.name }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          package: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
